{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hello \u00b6 This is the documentation for the python package template link features Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 gitGraph commit commit branch develop commit commit commit checkout main commit commit graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!]; Example Unordered List Ordered List * Sed sagittis eleifend rutrum * Donec vitae suscipit est * Nulla tempor lobortis orci 1. Sed sagittis eleifend rutrum 2. Donec vitae suscipit est 3. Nulla tempor lobortis orci The range () function is used to generate a sequence of numbers. Unordered list Ordered list Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci The range () function is used to generate a sequence of numbers. Without highlight With highlight def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] bubble_sort.py def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] 1 2 3 4 5 def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!]; Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"Home"},{"location":"#hello","text":"This is the documentation for the python package template link features Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 gitGraph commit commit branch develop commit commit commit checkout main commit commit graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!]; Example Unordered List Ordered List * Sed sagittis eleifend rutrum * Donec vitae suscipit est * Nulla tempor lobortis orci 1. Sed sagittis eleifend rutrum 2. Donec vitae suscipit est 3. Nulla tempor lobortis orci The range () function is used to generate a sequence of numbers. Unordered list Ordered list Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci The range () function is used to generate a sequence of numbers. Without highlight With highlight def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] bubble_sort.py def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] 1 2 3 4 5 def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!]; Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"Hello"},{"location":"reference/SUMMARY/","text":"my_package module example","title":"SUMMARY"},{"location":"reference/module/example/","text":"This file has an example function, with a documentation string which should serve as a template for scikit-learn docstrings. hello ( name ) \u00b6 Just a greetings example. Args: name (str): Name to greet. Returns: str: greeting message Examples: .. code:: python >>> hello(\"Roman\") 'Hello Roman!' sklearn_template ( X , y , a = 1 , flag = True , f = None , ** kwargs ) \u00b6 This is where a short one-line description goes. This is where a longer, multi-line description goes. It's not required, but might be helpful if more information is needed. It can also refer to sections below, such as Notes, See Also, etc. Parameters: Name Type Description Default X array_like or sparse matrix Array of shape (n_samples, n_features). Other information about the array here. Keep it to ~2 lines: refer to Notes section for more. required y array_like Array of shape (n_samples,). Other information about the array here. Keep it to ~2 lines: refer to Notes section for more. required a int (optional, default Description of what a does 1 flag bool (optional, default If true, then do one thing. If false, then do another thing. True f callable (optional, default Call-back function. If not specified, then some other function will be used None **kwargs Additional keyword arguments will be passed to name_of_function {} Returns: Name Type Description z ndarray result of shape (n_samples,). Note that here we use \"ndarray\" rather than \"array_like\", because we assure we'll return a numpy array. optional_info dict returned only if flag is True. More info about this return value. Examples: >>> X = np . ones (( 4 , 3 )) >>> y = np . ones ( 4 ) >>> sklearn_template ( X , y ) (z, xmin, xmax) # this should match the actual output Notes \u00b6 More information. This can be in paragraph form, and uses markdown to show lists like this with as many items as you want Or to show code blocks, with two colons:: import pylab as pl x = np.arange(10) y = np.sin(x) pl.plot(x, y) We use a code block for a pylab example, because plotting does not play well with doctests (doctests runs all the example code, and checks that the output matches). See Also \u00b6 numpy.some_related_function : short description (optional) sklearn.some_other_function : short description","title":"example"},{"location":"reference/module/example/#my_package.module.example.hello","text":"Just a greetings example. Args: name (str): Name to greet. Returns: str: greeting message Examples: .. code:: python >>> hello(\"Roman\") 'Hello Roman!'","title":"hello()"},{"location":"reference/module/example/#my_package.module.example.sklearn_template","text":"This is where a short one-line description goes. This is where a longer, multi-line description goes. It's not required, but might be helpful if more information is needed. It can also refer to sections below, such as Notes, See Also, etc. Parameters: Name Type Description Default X array_like or sparse matrix Array of shape (n_samples, n_features). Other information about the array here. Keep it to ~2 lines: refer to Notes section for more. required y array_like Array of shape (n_samples,). Other information about the array here. Keep it to ~2 lines: refer to Notes section for more. required a int (optional, default Description of what a does 1 flag bool (optional, default If true, then do one thing. If false, then do another thing. True f callable (optional, default Call-back function. If not specified, then some other function will be used None **kwargs Additional keyword arguments will be passed to name_of_function {} Returns: Name Type Description z ndarray result of shape (n_samples,). Note that here we use \"ndarray\" rather than \"array_like\", because we assure we'll return a numpy array. optional_info dict returned only if flag is True. More info about this return value. Examples: >>> X = np . ones (( 4 , 3 )) >>> y = np . ones ( 4 ) >>> sklearn_template ( X , y ) (z, xmin, xmax) # this should match the actual output","title":"sklearn_template()"},{"location":"reference/module/example/#my_package.module.example.sklearn_template--notes","text":"More information. This can be in paragraph form, and uses markdown to show lists like this with as many items as you want Or to show code blocks, with two colons:: import pylab as pl x = np.arange(10) y = np.sin(x) pl.plot(x, y) We use a code block for a pylab example, because plotting does not play well with doctests (doctests runs all the example code, and checks that the output matches).","title":"Notes"},{"location":"reference/module/example/#my_package.module.example.sklearn_template--see-also","text":"numpy.some_related_function : short description (optional) sklearn.some_other_function : short description","title":"See Also"}]}