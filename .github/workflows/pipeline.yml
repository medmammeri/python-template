name: pipeline

on: [push]

jobs:
  build-wheel:
    runs-on: ubuntu-latest
    needs: [lint-black, lint-flake8, lint-isort, lint-mypy, unit-tests, safety-bandit]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: 'pip'
          cache-dependency-path: setup.py
      - name: build
        run: |
          mkdir wheels
          pip3 wheel --no-deps --wheel-dir wheels/ .
      - name: Archive wheels artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: wheels/*.whl

  lint-flake8:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: 'pip'
          cache-dependency-path: setup.py
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          FLAKE8=$(cat requirements/dev | grep flake8== || echo "flake8")
          pip3 install ${FLAKE8}
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          # flake8 . --count --exit-zero --max-complexity=10 
          # --max-line-length=127 --statistics
          flake8 .

  lint-black:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: 'pip'
          cache-dependency-path: setup.py
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          BLACK=$(cat requirements/dev | grep black== || echo "black")
          pip3 install ${BLACK}
      - name: Lint with black
        run: black --check --diff .

  lint-mypy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: 'pip'
          cache-dependency-path: setup.py
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          MYPY=$(cat requirements/dev | grep mypy== || echo "mypy")
          pip3 install ${MYPY}
      - name: Lint with mypy
        run: mypy --show-error-codes .

  lint-isort:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: 'pip'
          cache-dependency-path: setup.py
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          ISORT=$(cat requirements/dev | grep isort== || echo "isort")
          COLORAMA=$(cat requirements/dev | grep colorama== || echo "colorama")
          pip3 install ${ISORT}
          pip3 install ${COLORAMA}
      - name: Lint with black
        run: isort --check-only .

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: 'pip'
          cache-dependency-path: setup.py
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          make install
      - name: unit-tests
        run: pytest .

  safety-bandit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: 'pip'
          cache-dependency-path: setup.py
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip3 install --upgrade bandit
      - name: bandit
        run: bandit -r creditscoring